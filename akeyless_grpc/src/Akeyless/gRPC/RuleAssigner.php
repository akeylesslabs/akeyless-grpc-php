<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: models/rule_assigner.proto

namespace Akeyless\gRPC;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>akeyless_grpc.RuleAssigner</code>
 */
class RuleAssigner extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string access_id = 504426029 [json_name = "access_id"];</code>
     */
    protected $access_id = '';
    /**
     * Generated from protobuf field <code>string unique_id = 1439672 [json_name = "unique_id"];</code>
     */
    protected $unique_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $access_id
     *     @type string $unique_id
     * }
     */
    public function __construct($data = NULL) {
        \Metadata\RuleAssigner::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string access_id = 504426029 [json_name = "access_id"];</code>
     * @return string
     */
    public function getAccessId()
    {
        return $this->access_id;
    }

    /**
     * Generated from protobuf field <code>string access_id = 504426029 [json_name = "access_id"];</code>
     * @param string $var
     * @return $this
     */
    public function setAccessId($var)
    {
        GPBUtil::checkString($var, True);
        $this->access_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string unique_id = 1439672 [json_name = "unique_id"];</code>
     * @return string
     */
    public function getUniqueId()
    {
        return $this->unique_id;
    }

    /**
     * Generated from protobuf field <code>string unique_id = 1439672 [json_name = "unique_id"];</code>
     * @param string $var
     * @return $this
     */
    public function setUniqueId($var)
    {
        GPBUtil::checkString($var, True);
        $this->unique_id = $var;

        return $this;
    }

}

