<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: models/tokenizer_info.proto

namespace Akeyless\gRPC;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>akeyless_grpc.TokenizerInfo</code>
 */
class TokenizerInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.akeyless_grpc.VaultlessTokenizerInfo vaultless_tokenizer_info = 374177590 [json_name = "vaultless_tokenizer_info"];</code>
     */
    protected $vaultless_tokenizer_info = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Akeyless\gRPC\VaultlessTokenizerInfo $vaultless_tokenizer_info
     * }
     */
    public function __construct($data = NULL) {
        \Metadata\TokenizerInfo::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.akeyless_grpc.VaultlessTokenizerInfo vaultless_tokenizer_info = 374177590 [json_name = "vaultless_tokenizer_info"];</code>
     * @return \Akeyless\gRPC\VaultlessTokenizerInfo|null
     */
    public function getVaultlessTokenizerInfo()
    {
        return $this->vaultless_tokenizer_info;
    }

    public function hasVaultlessTokenizerInfo()
    {
        return isset($this->vaultless_tokenizer_info);
    }

    public function clearVaultlessTokenizerInfo()
    {
        unset($this->vaultless_tokenizer_info);
    }

    /**
     * Generated from protobuf field <code>.akeyless_grpc.VaultlessTokenizerInfo vaultless_tokenizer_info = 374177590 [json_name = "vaultless_tokenizer_info"];</code>
     * @param \Akeyless\gRPC\VaultlessTokenizerInfo $var
     * @return $this
     */
    public function setVaultlessTokenizerInfo($var)
    {
        GPBUtil::checkMessage($var, \Akeyless\gRPC\VaultlessTokenizerInfo::class);
        $this->vaultless_tokenizer_info = $var;

        return $this;
    }

}

