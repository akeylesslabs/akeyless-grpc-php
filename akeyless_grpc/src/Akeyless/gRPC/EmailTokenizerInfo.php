<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: models/email_tokenizer_info.proto

namespace Akeyless\gRPC;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>akeyless_grpc.EmailTokenizerInfo</code>
 */
class EmailTokenizerInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * What length of a random domain suffix to generate used only if FixedDomainSuffix is empty
     *
     * Generated from protobuf field <code>int64 domain_suffix_length = 260543321 [json_name = "domain_suffix_length"];</code>
     */
    protected $domain_suffix_length = 0;
    /**
     * if FixedDomainSuffix isn't empty, it will be appended to the output
     *
     * Generated from protobuf field <code>string fixed_domain_suffix = 529360481 [json_name = "fixed_domain_suffix"];</code>
     */
    protected $fixed_domain_suffix = '';
    /**
     * How many letters of the plaintext to keep in the output
     *
     * Generated from protobuf field <code>int64 keep_prefix_length = 153104904 [json_name = "keep_prefix_length"];</code>
     */
    protected $keep_prefix_length = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $domain_suffix_length
     *           What length of a random domain suffix to generate used only if FixedDomainSuffix is empty
     *     @type string $fixed_domain_suffix
     *           if FixedDomainSuffix isn't empty, it will be appended to the output
     *     @type int|string $keep_prefix_length
     *           How many letters of the plaintext to keep in the output
     * }
     */
    public function __construct($data = NULL) {
        \Metadata\EmailTokenizerInfo::initOnce();
        parent::__construct($data);
    }

    /**
     * What length of a random domain suffix to generate used only if FixedDomainSuffix is empty
     *
     * Generated from protobuf field <code>int64 domain_suffix_length = 260543321 [json_name = "domain_suffix_length"];</code>
     * @return int|string
     */
    public function getDomainSuffixLength()
    {
        return $this->domain_suffix_length;
    }

    /**
     * What length of a random domain suffix to generate used only if FixedDomainSuffix is empty
     *
     * Generated from protobuf field <code>int64 domain_suffix_length = 260543321 [json_name = "domain_suffix_length"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setDomainSuffixLength($var)
    {
        GPBUtil::checkInt64($var);
        $this->domain_suffix_length = $var;

        return $this;
    }

    /**
     * if FixedDomainSuffix isn't empty, it will be appended to the output
     *
     * Generated from protobuf field <code>string fixed_domain_suffix = 529360481 [json_name = "fixed_domain_suffix"];</code>
     * @return string
     */
    public function getFixedDomainSuffix()
    {
        return $this->fixed_domain_suffix;
    }

    /**
     * if FixedDomainSuffix isn't empty, it will be appended to the output
     *
     * Generated from protobuf field <code>string fixed_domain_suffix = 529360481 [json_name = "fixed_domain_suffix"];</code>
     * @param string $var
     * @return $this
     */
    public function setFixedDomainSuffix($var)
    {
        GPBUtil::checkString($var, True);
        $this->fixed_domain_suffix = $var;

        return $this;
    }

    /**
     * How many letters of the plaintext to keep in the output
     *
     * Generated from protobuf field <code>int64 keep_prefix_length = 153104904 [json_name = "keep_prefix_length"];</code>
     * @return int|string
     */
    public function getKeepPrefixLength()
    {
        return $this->keep_prefix_length;
    }

    /**
     * How many letters of the plaintext to keep in the output
     *
     * Generated from protobuf field <code>int64 keep_prefix_length = 153104904 [json_name = "keep_prefix_length"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setKeepPrefixLength($var)
    {
        GPBUtil::checkInt64($var);
        $this->keep_prefix_length = $var;

        return $this;
    }

}

